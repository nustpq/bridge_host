###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.40.0.51500/W32 for ARM     15/Nov/2011  10:05:28 #
# Copyright (C) 1999-2009 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  L:\SII_UCOS\Micrium_SAM7X256\Software\Noah\repeat.c      #
#    Command line =  L:\SII_UCOS\Micrium_SAM7X256\Software\Noah\repeat.c      #
#                    -lcN L:\SII_UCOS\Micrium_SAM7X256\Software\APP\FLASH\Lis #
#                    t\ -lb L:\SII_UCOS\Micrium_SAM7X256\Software\APP\FLASH\L #
#                    ist\ -o L:\SII_UCOS\Micrium_SAM7X256\Software\APP\FLASH\ #
#                    Obj\ --no_cse --no_unroll --no_inline --no_code_motion   #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=ARM7TDMI -e --fpu=None             #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4ARM\arm\INC\DLib_Config_Normal.h" -I        #
#                    L:\SII_UCOS\Micrium_SAM7X256\Software\APP\ -I            #
#                    L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uC-CPU\ARM\ #
#                    IAR\ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\BSP #
#                    \ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\DRIVER #
#                    \ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\NOAH\  #
#                    -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uCOS-II\ #
#                    Source\ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\ #
#                    uC-CPU\ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\ #
#                    uC-LIB\ -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\ #
#                    uC-CPU\ARM\IAR\ -I L:\SII_UCOS\Micrium_SAM7X256\Software #
#                    \APP\..\uCOS-II\Ports\ARM\Generic\IAR\ -I                #
#                    L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uC-Probe\Ta #
#                    rget\Communication\Generic\RS-232\Source\ -I             #
#                    L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uC-Probe\Ta #
#                    rget\Communication\Generic\RS-232\Ports\Atmel\AT91SAM7X\ #
#                     -I L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uC-Prob #
#                    e\Target\Communication\Generic\Source\ -I                #
#                    L:\SII_UCOS\Micrium_SAM7X256\Software\APP\..\uC-Probe\Ta #
#                    rget\Plugins\uCOS-II\ -I L:\SII_UCOS\Micrium_SAM7X256\So #
#                    ftware\APP\..\uC-Probe\Target\Demos\Intro\Source\ -I     #
#                    "D:\Program Files\IAR Systems\Embedded Workbench         #
#                    5.4ARM\arm\INC\" --interwork --cpu_mode arm -On          #
#    List file    =  L:\SII_UCOS\Micrium_SAM7X256\Software\APP\FLASH\List\rep #
#                    eat.lst                                                  #
#    Object file  =  L:\SII_UCOS\Micrium_SAM7X256\Software\APP\FLASH\Obj\repe #
#                    at.o                                                     #
#                                                                             #
#                                                                             #
###############################################################################

L:\SII_UCOS\Micrium_SAM7X256\Software\Noah\repeat.c
      1          
      2          typedef struct __REPEATCTR
      3          {
      4              // unsigned char RepeatLayer ;   // 重复执行的成数
      5              unsigned short  RepeatStart ;   // 重复执行的起始位置
      6              unsigned short  RepeatToNum ;   // 重复执行的总次数
      7              unsigned short  RepeatRsvNum ;  // 重复执行的剩余次数
      8          }REPEATCTR ;
      9          
     10          REPEATCTR RepeatCtr[20] ;
     11          unsigned char RepeatNum ;
     12          
     13          void repeat(void *RepeatCtr)
     14          {
     15            /*pq
     16              REPEATCTR *pRepeatCtr = (REPEATCTR *)RepeatCtr ;
     17              unsigned short i;
     18              
     19              for(i=pRepeatCtr->RepeatStart;i< ;i++)
     20              {
     21                  if()
     22                  {   // repeat tarsk
     23                      // relaoad repeatnum
     24                  }
     25              }
     26              // 
     27            
     28            */
     29          }

   Maximum stack usage in bytes:

     Function .cstack
     -------- -------
     repeat        0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     RepeatCtr       120
     RepeatNum         1
     repeat            4

 
 121 bytes in section .bss
   4 bytes in section .text
 
   4 bytes of CODE memory
 121 bytes of DATA memory

Errors: none
Warnings: none
