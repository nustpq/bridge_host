###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.3.6832/W32 for ARM        16/Dec/2014  22:25:32
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_uart_rx.c
#    Command line =  
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_uart_rx.c" -lcN
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\" -lb
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\" -o
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM7TDMI -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\BSP\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Driver\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Noah\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Shell\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uCOS-II\Source\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uC-CPU\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-LIB\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uCOS-II\Ports\ARM\Generic\IAR\" -I
#        "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Source\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\Atmel\AT91SAM7X\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\Source\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Plugins\uCOS-II\" -I
#        "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Demos\Intro\Source\"
#        --interwork --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\FLASH\List\task_uart_rx.lst
#    Object file  =  
#        E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\FLASH\Obj\task_uart_rx.o
#
###############################################################################

E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_uart_rx.c
      1          /*
      2          *********************************************************************************************************
      3          *                               iSAM TEST BENCH AUDIO BRIDGE BOARD APP PACKAGE
      4          *
      5          *                            (c) Copyright 2013 - 2016; Fortemedia Inc.; Nanjing, China
      6          *
      7          *                   All rights reserved.  Protected by international copyright laws.
      8          *                   Knowledge of the source code may not be used to write a similar
      9          *                   product.  This file may only be used in accordance with a license
     10          *                   and should not be redistributed in any way.
     11          *********************************************************************************************************
     12          */
     13          
     14          /*
     15          *********************************************************************************************************
     16          *
     17          *                                           TASK PACKAGE
     18          *
     19          *                                          Atmel AT91SAM7A3
     20          *                                               on the
     21          *                                      iSAM Audio Bridge Board
     22          *
     23          * Filename      : task_uart_rx.c
     24          * Version       : V1.0.0
     25          * Programmer(s) : PQ
     26          *********************************************************************************************************
     27          * Note(s)       :
     28          *********************************************************************************************************
     29          */
     30          
     31          
     32          #include <includes.h>
     33          
     34          
     35          
     36          volatile CPU_INT08U  Global_Idle_Ready = 0 ; //flag check if no command from PC for sometime
     37          
     38          /*
     39          *********************************************************************************************************
     40          *                                    App_TaskUART_Rx()
     41          *
     42          * Description : Process UART Receive related process between Audio Bridge and PC, Audio Bridge and Ruler.
     43          *               Fetch data from PC in UART receive buffer, check data sanity in DL layer 
     44          *
     45          * Argument(s) : p_arg   Argument passed to 'App_TaskUART_Rx()' by 'OSTaskCreate()'.
     46          *
     47          * Return(s)   : none.
     48          *
     49          * Note(s)     : (1) The first line of code is used to prevent a compiler warning because 'p_arg' is not
     50          *                   used.  The compiler should not generate any code for this statement.
     51          *********************************************************************************************************
     52          */
     53          void App_TaskUART_Rx( void *p_arg )
     54          {     
     55          	(void)p_arg; 
     56              
     57              CPU_INT08U       temp ;	
     58              CPU_INT08U       counter ;	
     59              CPU_INT08U       idle_counter ;	    
     60          	CMDREAD          CMD_Read_PC ;
     61              CMDREAD          CMD_Read_Ruler ;
     62              
     63              Init_CMD_Read( &CMD_Read_PC, EVENT_MsgQ_PCUART2Noah ) ;
     64              Init_CMD_Read( &CMD_Read_Ruler, EVENT_MsgQ_RulerUART2Noah ) ;
     65              idle_counter = 0;
     66              
     67          	while (DEF_TRUE) {               
     68             
     69                  counter = Queue_NData( (void*) pUART_Rece_Buf[PC_UART] ) ;  
     70                  //APP_TRACE_DBG((" %4d ",counter)) ;  
     71                  if( counter ) {
     72                      idle_counter = 0 ;
     73                  } else {            
     74                      if( idle_counter++ >= 100 ) { // 100*5ms = 500ms
     75                          Global_Idle_Ready = 1 ;                
     76                          idle_counter = 0 ;
     77                          LED_Clear(LED_DS2); //mute communication LED when >500ms free
     78                      }   
     79                  }
     80                  
     81                  while( counter-- ) {              
     82                      Queue_Read( &temp, pUART_Rece_Buf[PC_UART] );            
     83                      Noah_CMD_Read( &CMD_Read_PC, temp ) ;
     84                      
     85          		}           
     86                  
     87                  counter = Queue_NData( (void*) pUART_Rece_Buf[RULER_UART] ) ;          
     88                  while( counter-- ) {              
     89                      Queue_Read( &temp, pUART_Rece_Buf[RULER_UART] );            
     90                      Noah_CMD_Read( &CMD_Read_Ruler, temp ) ;
     91                      
     92          		} 
     93                          
     94                  OSTimeDly(5); // note : UART1_RECE_QUEUE_LENGTH = 1024B; 115200/10/1000 =  11.52;
     95            
     96                              
     97          	}
     98              
     99          }
    100          
    101          
    102              

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   App_TaskUART_Rx
        64   -> Init_CMD_Read
        64   -> LED_Clear
        64   -> Noah_CMD_Read
        64   -> OSTimeDly
        64   -> Queue_NData
        64   -> Queue_Read


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     292  App_TaskUART_Rx
       1  Global_Idle_Ready

 
   1 byte  in section .bss
 292 bytes in section .text
 
 292 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
