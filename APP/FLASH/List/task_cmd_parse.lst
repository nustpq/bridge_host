###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.3.6832/W32 for ARM        21/Jun/2016  16:45:27
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_cmd_parse.c
#    Command line =  
#        "F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_cmd_parse.c"
#        -lcN "F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\"
#        -lb "F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\" -o
#        "F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM7TDMI -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "F:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\BSP\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Driver\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Noah\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Shell\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uCOS-II\Source\" -I "F:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uC-CPU\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-LIB\" -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "F:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uCOS-II\Ports\ARM\Generic\IAR\" -I
#        "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Source\"
#        -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\Atmel\AT91SAM7X\"
#        -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\Source\"
#        -I "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Plugins\uCOS-II\" -I
#        "F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Demos\Intro\Source\"
#        --interwork --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\FLASH\List\task_cmd_parse.lst
#    Object file  =  
#        F:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\FLASH\Obj\task_cmd_parse.o
#
###############################################################################

F:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\task_cmd_parse.c
      1          /*
      2          *********************************************************************************************************
      3          *                               iSAM TEST BENCH AUDIO BRIDGE BOARD APP PACKAGE
      4          *
      5          *                            (c) Copyright 2013 - 2016; Fortemedia Inc.; Nanjing, China
      6          *
      7          *                   All rights reserved.  Protected by international copyright laws.
      8          *                   Knowledge of the source code may not be used to write a similar
      9          *                   product.  This file may only be used in accordance with a license
     10          *                   and should not be redistributed in any way.
     11          *********************************************************************************************************
     12          */
     13          
     14          /*
     15          *********************************************************************************************************
     16          *
     17          *                                           TASK PACKAGE
     18          *
     19          *                                          Atmel AT91SAM7A3
     20          *                                               on the
     21          *                                      iSAM Audio Bridge Board
     22          *
     23          * Filename      : task_cmd_parse.c
     24          * Version       : V1.0.0
     25          * Programmer(s) : PQ
     26          *********************************************************************************************************
     27          * Note(s)       :
     28          *********************************************************************************************************
     29          */
     30          
     31          #include <includes.h>
     32          
     33          
     34          //Queue
     35          void       * MsgQ_Noah2CMDParse[MsgUARTQueue_SIZE];
     36          //Event
     37          OS_EVENT   * EVENT_MsgQ_Noah2CMDParse;
     38          
     39          EMB_BUF   Emb_Buf_Cmd;
     40          EMB_BUF   Emb_Buf_Data;
     41          
     42          
     43          /*
     44          *********************************************************************************************************
     45          *                                    App_TaskCMDParse()
     46          *
     47          * Description : This task wait message event from App_TaskNoah().
     48          *               Check if the EMB data is valid in the message. And decode EMB data and parse command and data.
     49          *               Execute the command and return result.          
     50          *
     51          * Argument(s) : p_arg   Argument passed to 'App_TaskCMDParse()' by 'OSTaskCreate()'.
     52          *
     53          * Return(s)   : none.
     54          *
     55          * Note(s)     : (1) The first line of code is used to prevent a compiler warning because 'p_arg' is not
     56          *                   used.  The compiler should not generate any code for this statement.
     57          *********************************************************************************************************
     58          */
     59          void App_TaskCMDParse( void *p_arg )
     60          { 
     61              
     62              (void)p_arg;
     63              
     64              CPU_INT08U   err ;
     65              CPU_INT08U  *pTaskMsgIN ;
     66              NOAH_CMD     *pNoahCmd ; 
     67              EMB_BUF      *pEBuf;
     68              
     69              pTaskMsgIN  = NULL;
     70              
     71              pEBuf         = &Emb_Buf_Data;    
     72              Init_EMB_BUF( pEBuf ); //need reset this when Noah connection reset
     73              pEBuf         = &Emb_Buf_Cmd;    
     74              Init_EMB_BUF( pEBuf ); //need reset this when Noah connection reset
     75              
     76              while( DEF_TRUE ) {     
     77                  
     78                  pTaskMsgIN  = (INT8U *)OSQPend( EVENT_MsgQ_Noah2CMDParse, 0, &err );   
     79                  
     80                  if( pTaskMsgIN != NULL && OS_ERR_NONE == err )   {           
     81                 
     82                      pNoahCmd  = (NOAH_CMD *)pTaskMsgIN ; //change to NOAH CMD type              
     83                    
     84                      APP_TRACE_DBG((">"));    
     85                      err = EMB_Data_Check( pNoahCmd, pEBuf, 0 ); 
     86                      OSMemPut( pMEM_Part_MsgUART, pTaskMsgIN );  //release mem
     87                      if( err == OS_ERR_NONE ) {
     88                          if( pEBuf->state ) { // EMB data complete               
     89                              err = EMB_Data_Parse( pEBuf );                     
     90                          }                
     91                      } else {
     92                          Send_DACK(err);
     93                          Init_EMB_BUF( pEBuf );
     94                      }            
     95                      
     96                  }
     97                  
     98                  
     99              }
    100              
    101              
    102          }
    103                              
    104                  
    105              

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   App_TaskCMDParse
        24   -> EMB_Data_Check
        24   -> EMB_Data_Parse
        24   -> Init_EMB_BUF
        24   -> OSMemPut
        24   -> OSQPend
        24   -> Send_DACK


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     208  App_TaskCMDParse
       4  EVENT_MsgQ_Noah2CMDParse
    3088  Emb_Buf_Cmd
    3088  Emb_Buf_Data
      40  MsgQ_Noah2CMDParse

 
 6 220 bytes in section .bss
   208 bytes in section .text
 
   208 bytes of CODE memory
 6 220 bytes of DATA memory

Errors: none
Warnings: none
