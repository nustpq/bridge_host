###############################################################################
#                                                                             #
#     IAR Assembler V7.10.3.6832/W32 for ARM 05/Sep/2014  09:36:46            #
#     Copyright 1999-2014 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\BSP\cstartup.s#
#           List file     =  E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\cstartup.lst#
#           Object file   =  E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\cstartup.o#
#           Command line  =  E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\BSP\cstartup.s #
#                            -OE:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LE:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\ #
#                            -t8 --cpu ARM7TDMI --fpu None                    #
#                                                                             #
###############################################################################

    1                           ;
    2                           ;*********************************************
                                ***********************************************
                                ************
    3                           ;                                    EXCEPTION
                                 VECTORS & STARTUP CODE
    4                           ;
    5                           ; File      : cstartup.s
    6                           ; For       : ARM7 or ARM9
    7                           ; Toolchain : IAR EWARM V5.10 and higher
    8                           ;*********************************************
                                ***********************************************
                                ************
    9                           ;
   10                                   
   11                           ;*********************************************
                                ***********************************************
                                ************
   12                           ;                                          
                                 MACROS AND DEFINIITIONS
   13                           ;*********************************************
                                ***********************************************
                                ************
   14                           
   15                                                           ; Mode,
                                 correspords to bits 0-5 in CPSR
   16                           MODE_BITS       DEFINE  0x1F            ; Bit
                                 mask for mode bits in CPSR
   17                           USR_MODE        DEFINE  0x10            ; User
                                 mode
   18                           FIQ_MODE        DEFINE  0x11            ; Fast
                                 Interrupt Request mode
   19                           IRQ_MODE        DEFINE  0x12            ;
                                 Interrupt Request mode
   20                           SVC_MODE        DEFINE  0x13            ;
                                 Supervisor mode
   21                           ABT_MODE        DEFINE  0x17            ;
                                 Abort mode
   22                           UND_MODE        DEFINE  0x1B            ;
                                 Undefined Instruction mode
   23                           SYS_MODE        DEFINE  0x1F            ;
                                 System mode
   24                                   
   25                           
   26                           ;*********************************************
                                ***********************************************
                                ************
   27                           ;                               ARM EXCEPTION
                                 VECTORS
   28                           ;*********************************************
                                ***********************************************
                                ************
   29                           
   30                               SECTION .vectors:CODE:NOROOT(2)
   31                               PUBLIC  __vector
   32                               PUBLIC  __iar_program_start
   33                           
   34                               IMPORT  OS_CPU_ARM_ExceptUndefInstrHndlr
   35                               IMPORT  OS_CPU_ARM_ExceptSwiHndlr
   36                               IMPORT  OS_CPU_ARM_ExceptPrefetchAbortHndl
                                r
   37                               IMPORT  OS_CPU_ARM_ExceptDataAbortHndlr
   38                               IMPORT  OS_CPU_ARM_ExceptIrqHndlr
   39                               IMPORT  OS_CPU_ARM_ExceptFiqHndlr
   40                           
   41                               ARM
   42                           
   43                           __iar_init$$done            ; The interrupt
                                 vector is not needed
   44                                                       ; until after copy
                                 initialization is done
   45                           
   46                           __vector:
   47    00000000 18F09FE5          LDR     PC, [PC,#24]    ; Absolute jump can
                                                             reach 4 GByte
   48    00000004 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             undef_handler
   49    00000008 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             swi_handler
   50    0000000C 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             prefetch_handler
   51    00000010 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             data_handler
   52                           __vector_0x14:
   53    00000014 00000000          DC32    0               ; Reserved
   54    00000018 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             irq_handler
   55    0000001C 18F09FE5          LDR     PC, [PC,#24]    ; Branch to
                                                             fiq_handler
   56                           
   57                           
   58    00000020 ........          DC32    __iar_program_start
   59    00000024 ........          DC32    OS_CPU_ARM_ExceptUndefInstrHndlr
   60    00000028 ........          DC32    OS_CPU_ARM_ExceptSwiHndlr
   61    0000002C ........          DC32    OS_CPU_ARM_ExceptPrefetchAbortHndlr
   62    00000030 ........          DC32    OS_CPU_ARM_ExceptDataAbortHndlr
   63    00000034 00000000          DC32    0
   64    00000038 ........          DC32    OS_CPU_ARM_ExceptIrqHndlr
   65    0000003C ........          DC32    OS_CPU_ARM_ExceptFiqHndlr
   66                           
   67                           
   68                           ;*********************************************
                                ***********************************************
                                ************
   69                           ;                                   LOW-LEVEL
                                 INITIALIZATION
   70                           ;*********************************************
                                ***********************************************
                                ************
   71                           
   72                               SECTION FIQ_STACK:DATA:NOROOT(3)
   73                               SECTION IRQ_STACK:DATA:NOROOT(3)
   74                               SECTION SVC_STACK:DATA:NOROOT(3)
   75                               SECTION ABT_STACK:DATA:NOROOT(3)
   76                               SECTION UND_STACK:DATA:NOROOT(3)
   77                               SECTION CSTACK:DATA:NOROOT(3)
   78                               SECTION .cstartup:CODE:NOROOT(2)
   79                           
   80                               REQUIRE __vector
   81                               EXTERN  ?main
   82                               PUBLIC  __iar_program_start
   83                               EXTERN  lowlevel_init
   84                               EXTERN  LowLevelInitPLL
   85                           
   86                           __iar_program_start:
   87                           
   88                           
   89                           ;*********************************************
                                ***********************************************
                                ************
   90                           ;                                    STACK
                                 POINTER INITIALIZATION
   91                           ;*********************************************
                                ***********************************************
                                ************
   92    00000000 00000FE1          MRS     r0,cpsr                            
                                             ; Original PSR value
   93    00000004 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
   94    00000008 130080E3          ORR     r0,r0,#SVC_MODE                    
                                             ; Set SVC mode bits
   95    0000000C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
   96    00000010 68D09FE5          LDR     sp,=SFE(SVC_STACK)                 
                                             ; End of SVC_STACK
   97                           
   98    00000014 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
   99    00000018 1B0080E3          ORR     r0,r0,#UND_MODE                    
                                             ; Set UND mode bits
  100    0000001C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
  101    00000020 5CD09FE5          LDR     sp,=SFE(UND_STACK)                 
                                             ; End of UND_STACK
  102                           
  103    00000024 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
  104    00000028 170080E3          ORR     r0,r0,#ABT_MODE                    
                                             ; Set ABT mode bits
  105    0000002C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
  106    00000030 50D09FE5          LDR     sp,=SFE(ABT_STACK)                 
                                             ; End of ABT_STACK
  107                           
  108    00000034 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
  109    00000038 110080E3          ORR     r0,r0,#FIQ_MODE                    
                                             ; Set FIQ mode bits
  110    0000003C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
  111    00000040 44D09FE5          LDR     sp,=SFE(FIQ_STACK)                 
                                             ; End of FIQ_STACK
  112                           
  113    00000044 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
  114    00000048 120080E3          ORR     r0,r0,#IRQ_MODE                    
                                             ; Set IRQ mode bits
  115    0000004C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
  116    00000050 38D09FE5          LDR     sp,=SFE(IRQ_STACK)                 
                                             ; End of IRQ_STACK
  117                           
  118    00000054 1F00C0E3          BIC     r0,r0,#MODE_BITS                   
                                             ; Clear the mode bits
  119    00000058 1F0080E3          ORR     r0,r0,#SYS_MODE                    
                                             ; Set System mode bits
  120    0000005C 00F021E1          MSR     cpsr_c,r0                          
                                             ; Change the mode
  121    00000060 2CD09FE5          LDR     sp,=SFE(CSTACK)                    
                                             ; End of CSTACK
  122                           
  123                           
  124                           ;*********************************************
                                ***********************************************
                                ************
  125                           ;                                   ADDITIONAL
                                 INITIALIZATION
  126                           ;*********************************************
                                ***********************************************
                                ************
  127    00000064 2C009FE5          LDR     r0, =LowLevelInitPLL
  128    00000068 24409FE5          LDR     r4, =SFE(CSTACK)
  129    0000006C 04D0A0E1          MOV     sp, r4
  130    00000070 0FE0A0E1          MOV     lr, pc
  131    00000074 10FF2FE1          BX      r0
  132                           
  133                           
  134                           ;*********************************************
                                ***********************************************
                                ************
  135                           ;                           CONTINUE TO ?main
                                 FOR ADDITIONAL INITIALIZATION
  136                           ;*********************************************
                                ***********************************************
                                ************
  137                           
  138    00000078 1C009FE5          LDR     r0,=?main
  139    0000007C 10FF2FE1          BX      r0
  140                           
  140.1                                  TABLE
  140.2  00000080 ........              Reference on line 96
  140.3  00000084 ........              Reference on line 101
  140.4  00000088 ........              Reference on line 106
  140.5  0000008C ........              Reference on line 111
  140.6  00000090 ........              Reference on line 116
  140.7  00000094 ........              Reference on line 121,128
  140.8  00000098 ........              Reference on line 127
  140.9  0000009C ........              Reference on line 138
  141                               END
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 224         #
##############################



