###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.3.6832/W32 for ARM        18/Dec/2014  19:24:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  arm
#    Endian       =  little
#    Source file  =  
#        E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\uCOS-II\Ports\ARM\Generic\IAR\os_dbg.c
#    Command line =  
#        "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\uCOS-II\Ports\ARM\Generic\IAR\os_dbg.c" -lcN
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\" -lb
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\" -o
#        "E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=ARM7TDMI -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\BSP\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Driver\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Noah\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\Shell\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uCOS-II\Source\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uC-CPU\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-LIB\" -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-CPU\ARM\IAR\" -I "E:\SVN Dir\PQ\iSAM
#        Test Bench\Bridge_Host_OS\APP\..\uCOS-II\Ports\ARM\Generic\IAR\" -I
#        "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Source\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\Atmel\AT91SAM7X\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Communication\Generic\Source\"
#        -I "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Plugins\uCOS-II\" -I
#        "E:\SVN Dir\PQ\iSAM Test
#        Bench\Bridge_Host_OS\APP\..\uC-Probe\Target\Demos\Intro\Source\"
#        --interwork --cpu_mode arm -On --use_c++_inline
#    List file    =  
#        E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\List\os_dbg.lst
#    Object file  =  
#        E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\APP\FLASH\Obj\os_dbg.o
#
###############################################################################

E:\SVN Dir\PQ\iSAM Test Bench\Bridge_Host_OS\uCOS-II\Ports\ARM\Generic\IAR\os_dbg.c
      1          /*
      2          *********************************************************************************************************
      3          *                                               uC/OS-II
      4          *                                         The Real-Time Kernel
      5          *                                          DEBUGGER CONSTANTS
      6          *
      7          *                             (c) Copyright 1992-2007, Micrium, Weston, FL
      8          *                                          All Rights Reserved
      9          *
     10          *                                           Generic ARM Port
     11          *
     12          * File      : OS_DBG.C
     13          * Version   : V2.89
     14          * By        : Jean J. Labrosse
     15          *
     16          * For       : ARM7 or ARM9
     17          * Mode      : ARM or Thumb
     18          * Toolchain : IAR's EWARM V4.11a and higher
     19          *********************************************************************************************************
     20          */
     21          
     22          #include <ucos_ii.h>
     23          
     24                                                    /* The following #define tells the IAR compiler to 'not' optimize these ...   */
     25                                                    /* ... 'const' out since they are not used elsewhere.                         */
     26          #define  OS_COMPILER_OPT  __root
     27          
     28          /*
     29          *********************************************************************************************************
     30          *                                             DEBUG DATA
     31          *********************************************************************************************************
     32          */
     33          
     34          OS_COMPILER_OPT  INT16U  const  OSDebugEn           = OS_DEBUG_EN;               /* Debug constants are defined below   */
     35          
     36          #if OS_DEBUG_EN > 0u
     37          
     38          OS_COMPILER_OPT  INT32U  const  OSEndiannessTest    = 0x12345678uL;              /* Variable to test CPU endianness     */
     39          
     40          OS_COMPILER_OPT  INT16U  const  OSEventEn           = OS_EVENT_EN;
     41          OS_COMPILER_OPT  INT16U  const  OSEventMax          = OS_MAX_EVENTS;             /* Number of event control blocks      */
     42          OS_COMPILER_OPT  INT16U  const  OSEventNameEn       = OS_EVENT_NAME_EN;
     43          #if (OS_EVENT_EN > 0u) && (OS_MAX_EVENTS > 0u)
     44          OS_COMPILER_OPT  INT16U  const  OSEventSize         = sizeof(OS_EVENT);          /* Size in Bytes of OS_EVENT           */
     45          OS_COMPILER_OPT  INT16U  const  OSEventTblSize      = sizeof(OSEventTbl);        /* Size of OSEventTbl[] in bytes       */
     46          #else
     47          OS_COMPILER_OPT  INT16U  const  OSEventSize         = 0u;
     48          OS_COMPILER_OPT  INT16U  const  OSEventTblSize      = 0u;
     49          #endif
     50          OS_COMPILER_OPT  INT16U  const  OSEventMultiEn      = OS_EVENT_MULTI_EN;
     51          
     52          
     53          OS_COMPILER_OPT  INT16U  const  OSFlagEn            = OS_FLAG_EN;
     54          #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
     55          OS_COMPILER_OPT  INT16U  const  OSFlagGrpSize       = sizeof(OS_FLAG_GRP);       /* Size in Bytes of OS_FLAG_GRP        */
     56          OS_COMPILER_OPT  INT16U  const  OSFlagNodeSize      = sizeof(OS_FLAG_NODE);      /* Size in Bytes of OS_FLAG_NODE       */
     57          OS_COMPILER_OPT  INT16U  const  OSFlagWidth         = sizeof(OS_FLAGS);          /* Width (in bytes) of OS_FLAGS        */
     58          #else
     59          OS_COMPILER_OPT  INT16U  const  OSFlagGrpSize       = 0u;
     60          OS_COMPILER_OPT  INT16U  const  OSFlagNodeSize      = 0u;
     61          OS_COMPILER_OPT  INT16U  const  OSFlagWidth         = 0u;
     62          #endif
     63          OS_COMPILER_OPT  INT16U  const  OSFlagMax           = OS_MAX_FLAGS;
     64          OS_COMPILER_OPT  INT16U  const  OSFlagNameEn        = OS_FLAG_NAME_EN;
     65          
     66          OS_COMPILER_OPT  INT16U  const  OSLowestPrio        = OS_LOWEST_PRIO;
     67          
     68          OS_COMPILER_OPT  INT16U  const  OSMboxEn            = OS_MBOX_EN;
     69          
     70          OS_COMPILER_OPT  INT16U  const  OSMemEn             = OS_MEM_EN;
     71          OS_COMPILER_OPT  INT16U  const  OSMemMax            = OS_MAX_MEM_PART;           /* Number of memory partitions         */
     72          OS_COMPILER_OPT  INT16U  const  OSMemNameEn         = OS_MEM_NAME_EN;
     73          #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
     74          OS_COMPILER_OPT  INT16U  const  OSMemSize           = sizeof(OS_MEM);            /* Mem. Partition header sine (bytes)  */
     75          OS_COMPILER_OPT  INT16U  const  OSMemTblSize        = sizeof(OSMemTbl);
     76          #else
     77          OS_COMPILER_OPT  INT16U  const  OSMemSize           = 0u;
     78          OS_COMPILER_OPT  INT16U  const  OSMemTblSize        = 0u;
     79          #endif
     80          OS_COMPILER_OPT  INT16U  const  OSMutexEn           = OS_MUTEX_EN;
     81          
     82          OS_COMPILER_OPT  INT16U  const  OSPtrSize           = sizeof(void *);            /* Size in Bytes of a pointer          */
     83          
     84          OS_COMPILER_OPT  INT16U  const  OSQEn               = OS_Q_EN;
     85          OS_COMPILER_OPT  INT16U  const  OSQMax              = OS_MAX_QS;                 /* Number of queues                    */
     86          #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
     87          OS_COMPILER_OPT  INT16U  const  OSQSize             = sizeof(OS_Q);              /* Size in bytes of OS_Q structure     */
     88          #else
     89          OS_COMPILER_OPT  INT16U  const  OSQSize             = 0u;
     90          #endif
     91          
     92          OS_COMPILER_OPT  INT16U  const  OSRdyTblSize        = OS_RDY_TBL_SIZE;           /* Number of bytes in the ready table  */
     93          
     94          OS_COMPILER_OPT  INT16U  const  OSSemEn             = OS_SEM_EN;
     95          
     96          OS_COMPILER_OPT  INT16U  const  OSStkWidth          = sizeof(OS_STK);            /* Size in Bytes of a stack entry      */
     97          
     98          OS_COMPILER_OPT  INT16U  const  OSTaskCreateEn      = OS_TASK_CREATE_EN;
     99          OS_COMPILER_OPT  INT16U  const  OSTaskCreateExtEn   = OS_TASK_CREATE_EXT_EN;
    100          OS_COMPILER_OPT  INT16U  const  OSTaskDelEn         = OS_TASK_DEL_EN;
    101          OS_COMPILER_OPT  INT16U  const  OSTaskIdleStkSize   = OS_TASK_IDLE_STK_SIZE;
    102          OS_COMPILER_OPT  INT16U  const  OSTaskProfileEn     = OS_TASK_PROFILE_EN;
    103          OS_COMPILER_OPT  INT16U  const  OSTaskMax           = OS_MAX_TASKS + OS_N_SYS_TASKS; /* Total max. number of tasks      */
    104          OS_COMPILER_OPT  INT16U  const  OSTaskNameEn        = OS_TASK_NAME_EN;
    105          OS_COMPILER_OPT  INT16U  const  OSTaskStatEn        = OS_TASK_STAT_EN;
    106          OS_COMPILER_OPT  INT16U  const  OSTaskStatStkSize   = OS_TASK_STAT_STK_SIZE;
    107          OS_COMPILER_OPT  INT16U  const  OSTaskStatStkChkEn  = OS_TASK_STAT_STK_CHK_EN;
    108          OS_COMPILER_OPT  INT16U  const  OSTaskSwHookEn      = OS_TASK_SW_HOOK_EN;
    109          
    110          OS_COMPILER_OPT  INT16U  const  OSTCBPrioTblMax     = OS_LOWEST_PRIO + 1u;       /* Number of entries in OSTCBPrioTbl[] */
    111          OS_COMPILER_OPT  INT16U  const  OSTCBSize           = sizeof(OS_TCB);            /* Size in Bytes of OS_TCB             */
    112          OS_COMPILER_OPT  INT16U  const  OSTicksPerSec       = OS_TICKS_PER_SEC;
    113          OS_COMPILER_OPT  INT16U  const  OSTimeTickHookEn    = OS_TIME_TICK_HOOK_EN;
    114          OS_COMPILER_OPT  INT16U  const  OSVersionNbr        = OS_VERSION;
    115          
    116          OS_COMPILER_OPT  INT16U  const  OSTmrEn             = OS_TMR_EN;
    117          OS_COMPILER_OPT  INT16U  const  OSTmrCfgMax         = OS_TMR_CFG_MAX;
    118          OS_COMPILER_OPT  INT16U  const  OSTmrCfgNameEn      = OS_TMR_CFG_NAME_EN;
    119          OS_COMPILER_OPT  INT16U  const  OSTmrCfgWheelSize   = OS_TMR_CFG_WHEEL_SIZE;
    120          OS_COMPILER_OPT  INT16U  const  OSTmrCfgTicksPerSec = OS_TMR_CFG_TICKS_PER_SEC;
    121          
    122          #if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
    123          OS_COMPILER_OPT  INT16U  const  OSTmrSize           = sizeof(OS_TMR);
    124          OS_COMPILER_OPT  INT16U  const  OSTmrTblSize        = sizeof(OSTmrTbl);
    125          OS_COMPILER_OPT  INT16U  const  OSTmrWheelSize      = sizeof(OS_TMR_WHEEL);
    126          OS_COMPILER_OPT  INT16U  const  OSTmrWheelTblSize   = sizeof(OSTmrWheelTbl);
    127          #else
    128          OS_COMPILER_OPT  INT16U  const  OSTmrSize           = 0u;
    129          OS_COMPILER_OPT  INT16U  const  OSTmrTblSize        = 0u;
    130          OS_COMPILER_OPT  INT16U  const  OSTmrWheelSize      = 0u;
    131          OS_COMPILER_OPT  INT16U  const  OSTmrWheelTblSize   = 0u;
    132          #endif
    133          
    134          #endif
    135          
    136          /*$PAGE*/
    137          /*
    138          *********************************************************************************************************
    139          *                                             DEBUG DATA
    140          *                            TOTAL DATA SPACE (i.e. RAM) USED BY uC/OS-II
    141          *********************************************************************************************************
    142          */
    143          #if OS_DEBUG_EN > 0u
    144          
    145          OS_COMPILER_OPT  INT16U  const  OSDataSize = sizeof(OSCtxSwCtr)
    146          #if (OS_EVENT_EN > 0u) && (OS_MAX_EVENTS > 0u)
    147                                                     + sizeof(OSEventFreeList)
    148                                                     + sizeof(OSEventTbl)
    149          #endif
    150          #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
    151                                                     + sizeof(OSFlagTbl)
    152                                                     + sizeof(OSFlagFreeList)
    153          #endif
    154          #if OS_TASK_STAT_EN > 0u
    155                                                     + sizeof(OSCPUUsage)
    156                                                     + sizeof(OSIdleCtrMax)
    157                                                     + sizeof(OSIdleCtrRun)
    158                                                     + sizeof(OSStatRdy)
    159                                                     + sizeof(OSTaskStatStk)
    160          #endif
    161          #if OS_TICK_STEP_EN > 0u
    162                                                     + sizeof(OSTickStepState)
    163          #endif
    164          #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
    165                                                     + sizeof(OSMemFreeList)
    166                                                     + sizeof(OSMemTbl)
    167          #endif
    168          #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
    169                                                     + sizeof(OSQFreeList)
    170                                                     + sizeof(OSQTbl)
    171          #endif
    172          #if OS_TIME_GET_SET_EN > 0u
    173                                                     + sizeof(OSTime)
    174          #endif
    175          #if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
    176                                                     + sizeof(OSTmrFree)
    177                                                     + sizeof(OSTmrUsed)
    178                                                     + sizeof(OSTmrTime)
    179                                                     + sizeof(OSTmrSem)
    180                                                     + sizeof(OSTmrSemSignal)
    181                                                     + sizeof(OSTmrFreeList)
    182                                                     + sizeof(OSTmrTbl)
    183                                                     + sizeof(OSTmrWheelTbl)
    184          #endif
    185                                                     + sizeof(OSIntNesting)
    186                                                     + sizeof(OSLockNesting)
    187                                                     + sizeof(OSPrioCur)
    188                                                     + sizeof(OSPrioHighRdy)
    189                                                     + sizeof(OSRdyGrp)
    190                                                     + sizeof(OSRdyTbl)
    191                                                     + sizeof(OSRunning)
    192                                                     + sizeof(OSTaskCtr)
    193                                                     + sizeof(OSIdleCtr)
    194                                                     + sizeof(OSTaskIdleStk)
    195                                                     + sizeof(OSTCBCur)
    196                                                     + sizeof(OSTCBFreeList)
    197                                                     + sizeof(OSTCBHighRdy)
    198                                                     + sizeof(OSTCBList)
    199                                                     + sizeof(OSTCBPrioTbl)
    200                                                     + sizeof(OSTCBTbl);
    201          
    202          #endif
    203          
    204          /*$PAGE*/
    205          /*
    206          *********************************************************************************************************
    207          *                                       OS DEBUG INITIALIZAZTION
    208          *
    209          * Description: This function is used to make sure that debug variables that are unused in the application
    210          *              are not optimized away.  This function might not be necessary for all compilers.  In this
    211          *              case, you should simply DELETE the code in this function while still leaving the declaration
    212          *              of the function itself.
    213          *
    214          * Arguments  : none
    215          *
    216          * Returns    : none
    217          *
    218          * Note(s)    : (1) This code doesn't do anything, it simply prevents the compiler from optimizing out
    219          *                  the 'const' variables which are declared in this file.
    220          *********************************************************************************************************
    221          */
    222          
    223          #if OS_DEBUG_EN > 0u
    224          void  OSDebugInit (void)
    225          {
    226              void  *ptemp;
    227          
    228          
    229              ptemp = (void *)&OSDebugEn;
    230          
    231              ptemp = (void *)&OSEndiannessTest;
    232          
    233              ptemp = (void *)&OSEventMax;
    234              ptemp = (void *)&OSEventNameEn;
    235              ptemp = (void *)&OSEventEn;
    236              ptemp = (void *)&OSEventSize;
    237              ptemp = (void *)&OSEventTblSize;
    238              ptemp = (void *)&OSEventMultiEn;
    239          
    240              ptemp = (void *)&OSFlagEn;
    241              ptemp = (void *)&OSFlagGrpSize;
    242              ptemp = (void *)&OSFlagNodeSize;
    243              ptemp = (void *)&OSFlagWidth;
    244              ptemp = (void *)&OSFlagMax;
    245              ptemp = (void *)&OSFlagNameEn;
    246          
    247              ptemp = (void *)&OSLowestPrio;
    248          
    249              ptemp = (void *)&OSMboxEn;
    250          
    251              ptemp = (void *)&OSMemEn;
    252              ptemp = (void *)&OSMemMax;
    253              ptemp = (void *)&OSMemNameEn;
    254              ptemp = (void *)&OSMemSize;
    255              ptemp = (void *)&OSMemTblSize;
    256          
    257              ptemp = (void *)&OSMutexEn;
    258          
    259              ptemp = (void *)&OSPtrSize;
    260          
    261              ptemp = (void *)&OSQEn;
    262              ptemp = (void *)&OSQMax;
    263              ptemp = (void *)&OSQSize;
    264          
    265              ptemp = (void *)&OSRdyTblSize;
    266          
    267              ptemp = (void *)&OSSemEn;
    268          
    269              ptemp = (void *)&OSStkWidth;
    270          
    271              ptemp = (void *)&OSTaskCreateEn;
    272              ptemp = (void *)&OSTaskCreateExtEn;
    273              ptemp = (void *)&OSTaskDelEn;
    274              ptemp = (void *)&OSTaskIdleStkSize;
    275              ptemp = (void *)&OSTaskProfileEn;
    276              ptemp = (void *)&OSTaskMax;
    277              ptemp = (void *)&OSTaskNameEn;
    278              ptemp = (void *)&OSTaskStatEn;
    279              ptemp = (void *)&OSTaskStatStkSize;
    280              ptemp = (void *)&OSTaskStatStkChkEn;
    281              ptemp = (void *)&OSTaskSwHookEn;
    282          
    283              ptemp = (void *)&OSTCBPrioTblMax;
    284              ptemp = (void *)&OSTCBSize;
    285          
    286              ptemp = (void *)&OSTicksPerSec;
    287              ptemp = (void *)&OSTimeTickHookEn;
    288          
    289          #if OS_TMR_EN > 0u
    290              ptemp = (void *)&OSTmrTbl[0];
    291              ptemp = (void *)&OSTmrWheelTbl[0];
    292          
    293              ptemp = (void *)&OSTmrEn;
    294              ptemp = (void *)&OSTmrCfgMax;
    295              ptemp = (void *)&OSTmrCfgNameEn;
    296              ptemp = (void *)&OSTmrCfgWheelSize;
    297              ptemp = (void *)&OSTmrCfgTicksPerSec;
    298              ptemp = (void *)&OSTmrSize;
    299              ptemp = (void *)&OSTmrTblSize;
    300          
    301              ptemp = (void *)&OSTmrWheelSize;
    302              ptemp = (void *)&OSTmrWheelTblSize;
    303          #endif
    304          
    305              ptemp = (void *)&OSVersionNbr;
    306          
    307              ptemp = (void *)&OSDataSize;
    308          
    309              ptemp = ptemp;                             /* Prevent compiler warning for 'ptemp' not being used! */
    310          }
    311          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   OSDebugInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  OSDataSize
       2  OSDebugEn
     688  OSDebugInit
       4  OSEndiannessTest
       2  OSEventEn
       2  OSEventMax
       2  OSEventMultiEn
       2  OSEventNameEn
       2  OSEventSize
       2  OSEventTblSize
       2  OSFlagEn
       2  OSFlagGrpSize
       2  OSFlagMax
       2  OSFlagNameEn
       2  OSFlagNodeSize
       2  OSFlagWidth
       2  OSLowestPrio
       2  OSMboxEn
       2  OSMemEn
       2  OSMemMax
       2  OSMemNameEn
       2  OSMemSize
       2  OSMemTblSize
       2  OSMutexEn
       2  OSPtrSize
       2  OSQEn
       2  OSQMax
       2  OSQSize
       2  OSRdyTblSize
       2  OSSemEn
       2  OSStkWidth
       2  OSTCBPrioTblMax
       2  OSTCBSize
       2  OSTaskCreateEn
       2  OSTaskCreateExtEn
       2  OSTaskDelEn
       2  OSTaskIdleStkSize
       2  OSTaskMax
       2  OSTaskNameEn
       2  OSTaskProfileEn
       2  OSTaskStatEn
       2  OSTaskStatStkChkEn
       2  OSTaskStatStkSize
       2  OSTaskSwHookEn
       2  OSTicksPerSec
       2  OSTimeTickHookEn
       2  OSTmrCfgMax
       2  OSTmrCfgNameEn
       2  OSTmrCfgTicksPerSec
       2  OSTmrCfgWheelSize
       2  OSTmrEn
       2  OSTmrSize
       2  OSTmrTblSize
       2  OSTmrWheelSize
       2  OSTmrWheelTblSize
       2  OSVersionNbr

 
 112 bytes in section .rodata
 688 bytes in section .text
 
 688 bytes of CODE  memory
 112 bytes of CONST memory

Errors: none
Warnings: none
